#!/usr/bin/env rad
---
Facilitates developing rad.
---
args:
    release r int?    # 1 to bump patch, 2 for minor and 3 for major.
    docs d bool       # Enable to deploy docs.
    amend a bool      # Enable to amend the last commit with the version bump instead of creating a new commit.
    push p bool       # Enable to push local commits.
    force_push "force-push" P bool  # Enable to just push, no checks or anything.
    build b bool      # Enable to build.
    validate v bool   # Enable to build & test.
    dumps bool        # Enable to run the dump tests.
    test t bool       # Enable to run tests once.

get_branch = fn():
    _, branch  = $!`echo -n $(git branch --show-current)`
    return branch

if build:
    $!`make build`

if test:
    $!`go test ./core/testing`

if release or push or validate:
    $!`go mod tidy`
    $!`make all`
    //$!`golines -w . -m 120`

if dumps or validate:
    $!`cd ./rts/test/dumps && ./test_dumps.rad`

if docs:
    $!`mkdocs gh-deploy -f ./docs-web/mkdocs.yml`

if release:
    // resolve version /////////////
    _, tags = $!`git tag -l`
    tags = split(tags[:-1], "\n")
    tags = [replace(t, "v", "") for t in tags]
    tags = [split(t, "\.") for t in tags]
    major = sort([parse_int(t[0]) for t in tags])[-1]
    minor = sort([parse_int(t[1]) for t in tags if parse_int(t[0]) == major])[-1]
    patch = sort([parse_int(t[2]) for t in tags if parse_int(t[0]) == major and parse_int(t[1]) == minor])[-1]
    if release == 1:
        version = "v{major}.{minor}.{patch + 1}"
    else if release == 2:
        version = "v{major}.{minor + 1}.0"
    else if release == 3:
        version = "v{major + 1}.0.0"
    print("Bumping to version:", green(version))
    ///////////////////////////////

    $!`go test ./core/testing -count 10`

    clean_before = unsafe $`git status --porcelain | grep -q .`

    $!`sed -i '' "s/Version = \".*\"/Version = \"{version}\"/" ./core/version.go`

    $!`git add .`
    $!`git diff HEAD --compact-summary`

    if confirm("Commit, tag & push? ({version}) [y/n] > "):
        branch = get_branch()

        if clean_before:
            // implied only our sed version bump made a diff

            if amend:
                $!`git commit --amend --no-edit`
            else:
                $!`git commit -m "Bump version to {version}"`
        else:
            $!`git commit`
        $!`git tag -a "{version}" -m "Bump version to {version}"`
        confirm $!`git push origin {branch} --tags`

if push or force_push:
    branch = get_branch()
    $!`git push origin {branch} --tags`

print(green("âœ… Done!"))
