{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "RSL",
	"scopeName": "source.rsl",
	"patterns": [
		{
			"name": "comment.line.shebang.rsl",
			"match": "^#!.*$"
		},
		{
			"name": "comment.line.double-slash.rsl",
			"match": "//.*$"
		},
		{
			"name": "comment.block.documentation.rsl",
			"begin": "^---$",
			"end": "^---$",
			"patterns": [
				{
					"name": "comment.block.documentation.rsl",
					"match": ".+"
				}
			]
		},
		{
			"begin": "\\bargs\\b",
			"end": "(?=^[^\\s])",
			"patterns": [
				{
					"name": "comment.line.number-sign.rad",
					"match": "#.*$"
				},
				{
					"name": "variable.parameter.rsl",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				},
				{
					"name": "string.quoted.double.rsl",
					"match": "\"[^\"]*\""
				},
				{
					"name": "constant.character.short-flag.rsl",
					"match": "\\b[a-zA-Z]\\b"
				},
				{
					"include": "#types"
				},
				{
					"name": "constant.numeric.rsl",
					"match": "=\\s*\\S+"
				}
			]
		},
		{
			"name": "keyword.control.rsl",
			"match": "\\b(and|args|break|case|color|continue|default|defer|del|display|else|fail|fields|for|if|in|map|not|or|rsl|recover|request|sort|switch|unsafe)\\b"
		},
		{
			"include": "#types"
		},
		{
			"name": "constant.language.rsl",
			"match": "\\b(asc|desc)\\b"
		},
		{
			"name": "keyword.operator.shell-command.rsl",
			"match": "\\$!"
		},
		{
			"name": "keyword.operator.shell-command.rsl",
			"match": "\\$"
		},
		{
			"name": "string.quoted.single.rsl",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"include": "#fstring_interpolation"
				}
			]
		},
		{
			"name": "string.quoted.double.rsl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"include": "#fstring_interpolation"
				}
			]
		},
		{
			"name": "string.quoted.other.rsl",
			"begin": "`",
			"end": "`",
			"patterns": [
				{
					"include": "#fstring_interpolation"
				}
			]
		},
		{
			"name": "entity.name.function.rsl",
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
		}
	],
	"repository": {
		"fstring_interpolation": {
			"name": "meta.interpolation.rsl",
			"begin": "\\{",
			"end": "\\}",
			"patterns": [
				{
					"name": "source.rsl",
					"match": "[^\\}]+"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.rsl",
					"match": "\\b(bool|array|float|int|json|string)\\b"
				}
			]
		}
	}
}