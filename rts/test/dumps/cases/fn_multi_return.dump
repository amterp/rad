=====
Fn multi return/assign
=====
fn foo():
    return 1
fn bar():
    return 1, 2
fn quz():
    return [1, 2]
=====
B: [ 0, 77] PS: [0,  0] PE: [6,  0] source_file
B: [ 0, 22] PS: [0,  0] PE: [1, 12]   fn_named
B: [ 0,  2] PS: [0,  0] PE: [0,  2]     keyword: fn `fn`
B: [ 3,  6] PS: [0,  3] PE: [0,  6]     name: identifier `foo`
B: [ 6,  8] PS: [0,  6] PE: [0,  8]     () `()`
B: [ 8,  9] PS: [0,  8] PE: [0,  9]     block_colon: : `:`
B: [14, 22] PS: [1,  4] PE: [1, 12]     return_stmt: return_stmt
B: [14, 20] PS: [1,  4] PE: [1, 10]       return `return`
B: [21, 22] PS: [1, 11] PE: [1, 12]       right: expr
B: [21, 22] PS: [1, 11] PE: [1, 12]         delegate: ternary_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]           delegate: or_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]             delegate: and_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]               delegate: compare_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]                 delegate: add_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]                   delegate: mult_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]                     delegate: unary_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]                       delegate: indexed_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]                         root: primary_expr
B: [21, 22] PS: [1, 11] PE: [1, 12]                           literal
B: [21, 22] PS: [1, 11] PE: [1, 12]                             int `1`
B: [23, 48] PS: [2,  0] PE: [3, 15]   fn_named
B: [23, 25] PS: [2,  0] PE: [2,  2]     keyword: fn `fn`
B: [26, 29] PS: [2,  3] PE: [2,  6]     name: identifier `bar`
B: [29, 31] PS: [2,  6] PE: [2,  8]     () `()`
B: [31, 32] PS: [2,  8] PE: [2,  9]     block_colon: : `:`
B: [37, 48] PS: [3,  4] PE: [3, 15]     return_stmt: return_stmt
B: [37, 43] PS: [3,  4] PE: [3, 10]       return `return`
B: [44, 45] PS: [3, 11] PE: [3, 12]       right: expr
B: [44, 45] PS: [3, 11] PE: [3, 12]         delegate: ternary_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]           delegate: or_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]             delegate: and_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]               delegate: compare_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]                 delegate: add_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]                   delegate: mult_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]                     delegate: unary_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]                       delegate: indexed_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]                         root: primary_expr
B: [44, 45] PS: [3, 11] PE: [3, 12]                           literal
B: [44, 45] PS: [3, 11] PE: [3, 12]                             int `1`
B: [45, 46] PS: [3, 12] PE: [3, 13]       , `,`
B: [47, 48] PS: [3, 14] PE: [3, 15]       right: expr
B: [47, 48] PS: [3, 14] PE: [3, 15]         delegate: ternary_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]           delegate: or_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]             delegate: and_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]               delegate: compare_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]                 delegate: add_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]                   delegate: mult_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]                     delegate: unary_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]                       delegate: indexed_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]                         root: primary_expr
B: [47, 48] PS: [3, 14] PE: [3, 15]                           literal
B: [47, 48] PS: [3, 14] PE: [3, 15]                             int `2`
B: [49, 76] PS: [4,  0] PE: [5, 17]   fn_named
B: [49, 51] PS: [4,  0] PE: [4,  2]     keyword: fn `fn`
B: [52, 55] PS: [4,  3] PE: [4,  6]     name: identifier `quz`
B: [55, 57] PS: [4,  6] PE: [4,  8]     () `()`
B: [57, 58] PS: [4,  8] PE: [4,  9]     block_colon: : `:`
B: [63, 76] PS: [5,  4] PE: [5, 17]     return_stmt: return_stmt
B: [63, 69] PS: [5,  4] PE: [5, 10]       return `return`
B: [70, 76] PS: [5, 11] PE: [5, 17]       right: expr
B: [70, 76] PS: [5, 11] PE: [5, 17]         delegate: ternary_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]           delegate: or_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]             delegate: and_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]               delegate: compare_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]                 delegate: add_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]                   delegate: mult_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]                     delegate: unary_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]                       delegate: indexed_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]                         root: primary_expr
B: [70, 76] PS: [5, 11] PE: [5, 17]                           literal
B: [70, 76] PS: [5, 11] PE: [5, 17]                             list
B: [70, 71] PS: [5, 11] PE: [5, 12]                               [ `[`
B: [71, 72] PS: [5, 12] PE: [5, 13]                               list_entry: expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                 delegate: ternary_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                   delegate: or_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                     delegate: and_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                       delegate: compare_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                         delegate: add_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                           delegate: mult_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                             delegate: unary_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                               delegate: indexed_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                                 root: primary_expr
B: [71, 72] PS: [5, 12] PE: [5, 13]                                                   literal
B: [71, 72] PS: [5, 12] PE: [5, 13]                                                     int `1`
B: [72, 73] PS: [5, 13] PE: [5, 14]                               , `,`
B: [74, 75] PS: [5, 15] PE: [5, 16]                               list_entry: expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                 delegate: ternary_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                   delegate: or_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                     delegate: and_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                       delegate: compare_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                         delegate: add_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                           delegate: mult_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                             delegate: unary_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                               delegate: indexed_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                                 root: primary_expr
B: [74, 75] PS: [5, 15] PE: [5, 16]                                                   literal
B: [74, 75] PS: [5, 15] PE: [5, 16]                                                     int `2`
B: [75, 76] PS: [5, 16] PE: [5, 17]                               ] `]`
