=====
Args declarations complete
=====
args:
    name str = "ali\\c\ne"
    midName str = ""
    lastName str = r"ali\\c\ne"
    age "AGE" a int = 30 # An age.
a = 2
=====
B: [  0, 127] PS: [0,  0] PE: [6,  0] source_file
B: [  0, 120] PS: [0,  0] PE: [4, 34]   arg_block
B: [  0,   4] PS: [0,  0] PE: [0,  4]     args `args`
B: [  4,   5] PS: [0,  4] PE: [0,  5]     : `:`
B: [ 10,  32] PS: [1,  4] PE: [1, 26]     declaration: arg_declaration
B: [ 10,  14] PS: [1,  4] PE: [1,  8]       arg_name: identifier `name`
B: [ 15,  18] PS: [1,  9] PE: [1, 12]       type: string_type `str`
B: [ 19,  20] PS: [1, 13] PE: [1, 14]       = `=`
B: [ 21,  32] PS: [1, 15] PE: [1, 26]       default: string
B: [ 21,  22] PS: [1, 15] PE: [1, 16]         start: string_start `"`
B: [ 22,  31] PS: [1, 16] PE: [1, 25]         contents: string_contents
B: [ 22,  25] PS: [1, 16] PE: [1, 19]           content: string_content `ali`
B: [ 25,  27] PS: [1, 19] PE: [1, 21]           backslash: esc_backslash `\\`
B: [ 27,  28] PS: [1, 21] PE: [1, 22]           content: string_content `c`
B: [ 28,  30] PS: [1, 22] PE: [1, 24]           newline: esc_newline `\n`
B: [ 30,  31] PS: [1, 24] PE: [1, 25]           content: string_content `e`
B: [ 31,  32] PS: [1, 25] PE: [1, 26]         end: string_end `"`
B: [ 37,  53] PS: [2,  4] PE: [2, 20]     declaration: arg_declaration
B: [ 37,  44] PS: [2,  4] PE: [2, 11]       arg_name: identifier `midName`
B: [ 45,  48] PS: [2, 12] PE: [2, 15]       type: string_type `str`
B: [ 49,  50] PS: [2, 16] PE: [2, 17]       = `=`
B: [ 51,  53] PS: [2, 18] PE: [2, 20]       default: string
B: [ 51,  52] PS: [2, 18] PE: [2, 19]         start: string_start `"`
B: [ 52,  53] PS: [2, 19] PE: [2, 20]         end: string_end `"`
B: [ 58,  85] PS: [3,  4] PE: [3, 31]     declaration: arg_declaration
B: [ 58,  66] PS: [3,  4] PE: [3, 12]       arg_name: identifier `lastName`
B: [ 67,  70] PS: [3, 13] PE: [3, 16]       type: string_type `str`
B: [ 71,  72] PS: [3, 17] PE: [3, 18]       = `=`
B: [ 73,  85] PS: [3, 19] PE: [3, 31]       default: string
B: [ 73,  75] PS: [3, 19] PE: [3, 21]         start: string_start `r"`
B: [ 75,  84] PS: [3, 21] PE: [3, 30]         contents: string_contents
B: [ 75,  84] PS: [3, 21] PE: [3, 30]           content: string_content `ali\\c\ne`
B: [ 84,  85] PS: [3, 30] PE: [3, 31]         end: string_end `"`
B: [ 90, 120] PS: [4,  4] PE: [4, 34]     declaration: arg_declaration
B: [ 90,  93] PS: [4,  4] PE: [4,  7]       arg_name: identifier `age`
B: [ 94,  99] PS: [4,  8] PE: [4, 13]       rename: string
B: [ 94,  95] PS: [4,  8] PE: [4,  9]         start: string_start `"`
B: [ 95,  98] PS: [4,  9] PE: [4, 12]         contents: string_contents
B: [ 95,  98] PS: [4,  9] PE: [4, 12]           content: string_content `AGE`
B: [ 98,  99] PS: [4, 12] PE: [4, 13]         end: string_end `"`
B: [100, 101] PS: [4, 14] PE: [4, 15]       shorthand: shorthand_flag `a`
B: [102, 105] PS: [4, 16] PE: [4, 19]       type: int_type `int`
B: [106, 107] PS: [4, 20] PE: [4, 21]       = `=`
B: [108, 110] PS: [4, 22] PE: [4, 24]       default: int_arg
B: [108, 110] PS: [4, 22] PE: [4, 24]         value: int `30`
B: [113, 120] PS: [4, 27] PE: [4, 34]       comment: comment_text `An age.`
B: [121, 126] PS: [5,  0] PE: [5,  5]   assign
B: [121, 122] PS: [5,  0] PE: [5,  1]     left: var_path
B: [121, 122] PS: [5,  0] PE: [5,  1]       root: identifier `a`
B: [123, 124] PS: [5,  2] PE: [5,  3]     = `=`
B: [125, 126] PS: [5,  4] PE: [5,  5]     right: expr
B: [125, 126] PS: [5,  4] PE: [5,  5]       delegate: ternary_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]         delegate: or_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]           delegate: and_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]             delegate: compare_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]               delegate: add_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]                 delegate: mult_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]                   delegate: unary_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]                     delegate: indexed_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]                       root: primary_expr
B: [125, 126] PS: [5,  4] PE: [5,  5]                         literal
B: [125, 126] PS: [5,  4] PE: [5,  5]                           int `2`
