=====
Lambda shell stmt
=====
fn() $!`echo hi`
fn() ($!`echo hi`)
=====
B: [ 0, 36] PS: [0,  0] PE: [2,  0] source_file
B: [ 0, 16] PS: [0,  0] PE: [0, 16]   expr
B: [ 0, 16] PS: [0,  0] PE: [0, 16]     delegate: ternary_expr
B: [ 0, 16] PS: [0,  0] PE: [0, 16]       delegate: or_expr
B: [ 0, 16] PS: [0,  0] PE: [0, 16]         delegate: and_expr
B: [ 0, 16] PS: [0,  0] PE: [0, 16]           delegate: compare_expr
B: [ 0, 16] PS: [0,  0] PE: [0, 16]             delegate: add_expr
B: [ 0, 16] PS: [0,  0] PE: [0, 16]               delegate: mult_expr
B: [ 0, 16] PS: [0,  0] PE: [0, 16]                 delegate: unary_expr
B: [ 0, 16] PS: [0,  0] PE: [0, 16]                   delegate: fn_lambda
B: [ 0,  2] PS: [0,  0] PE: [0,  2]                     keyword: fn `fn`
B: [ 2,  3] PS: [0,  2] PE: [0,  3]                     ( `(`
B: [ 3,  4] PS: [0,  3] PE: [0,  4]                     ) `)`
B: [ 5, 16] PS: [0,  5] PE: [0, 16]                     stmt: shell_stmt
B: [ 5, 16] PS: [0,  5] PE: [0, 16]                       shell_cmd: critical_shell_cmd
B: [ 5,  7] PS: [0,  5] PE: [0,  7]                         $! `$!`
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                         command: expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                           delegate: ternary_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                             delegate: or_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                               delegate: and_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                                 delegate: compare_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                                   delegate: add_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                                     delegate: mult_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                                       delegate: unary_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                                         delegate: indexed_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                                           root: primary_expr
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                                             literal
B: [ 7, 16] PS: [0,  7] PE: [0, 16]                                               string
B: [ 7,  8] PS: [0,  7] PE: [0,  8]                                                 start: string_start ```
B: [ 8, 15] PS: [0,  8] PE: [0, 15]                                                 contents: string_contents
B: [ 8, 15] PS: [0,  8] PE: [0, 15]                                                   content: string_content `echo hi`
B: [15, 16] PS: [0, 15] PE: [0, 16]                                                 end: string_end ```
B: [17, 35] PS: [1,  0] PE: [1, 18]   expr
B: [17, 35] PS: [1,  0] PE: [1, 18]     delegate: ternary_expr
B: [17, 35] PS: [1,  0] PE: [1, 18]       delegate: or_expr
B: [17, 35] PS: [1,  0] PE: [1, 18]         delegate: and_expr
B: [17, 35] PS: [1,  0] PE: [1, 18]           delegate: compare_expr
B: [17, 35] PS: [1,  0] PE: [1, 18]             delegate: add_expr
B: [17, 35] PS: [1,  0] PE: [1, 18]               delegate: mult_expr
B: [17, 35] PS: [1,  0] PE: [1, 18]                 delegate: unary_expr
B: [17, 35] PS: [1,  0] PE: [1, 18]                   delegate: fn_lambda
B: [17, 19] PS: [1,  0] PE: [1,  2]                     keyword: fn `fn`
B: [19, 20] PS: [1,  2] PE: [1,  3]                     ( `(`
B: [20, 21] PS: [1,  3] PE: [1,  4]                     ) `)`
B: [22, 23] PS: [1,  5] PE: [1,  6]                     ( `(`
B: [23, 34] PS: [1,  6] PE: [1, 17]                     stmt: shell_stmt
B: [23, 34] PS: [1,  6] PE: [1, 17]                       shell_cmd: critical_shell_cmd
B: [23, 25] PS: [1,  6] PE: [1,  8]                         $! `$!`
B: [25, 34] PS: [1,  8] PE: [1, 17]                         command: expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                           delegate: ternary_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                             delegate: or_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                               delegate: and_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                                 delegate: compare_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                                   delegate: add_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                                     delegate: mult_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                                       delegate: unary_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                                         delegate: indexed_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                                           root: primary_expr
B: [25, 34] PS: [1,  8] PE: [1, 17]                                             literal
B: [25, 34] PS: [1,  8] PE: [1, 17]                                               string
B: [25, 26] PS: [1,  8] PE: [1,  9]                                                 start: string_start ```
B: [26, 33] PS: [1,  9] PE: [1, 16]                                                 contents: string_contents
B: [26, 33] PS: [1,  9] PE: [1, 16]                                                   content: string_content `echo hi`
B: [33, 34] PS: [1, 16] PE: [1, 17]                                                 end: string_end ```
B: [34, 35] PS: [1, 17] PE: [1, 18]                     ) `)`
