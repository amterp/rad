=====
Shell modifiers
=====
quiet $`make all`
code = quiet $`make all`
code, stdout = quiet $`make all`

quiet confirm $`make all`
code = quiet confirm $`make all`
code, stdout = quiet confirm $`make all`

quiet $`make all` catch:
    pass
=====
B: [  0, 212] PS: [ 0,  0] PE: [10,  0] source_file
B: [  0,  17] PS: [ 0,  0] PE: [ 0, 17]   shell_stmt
B: [  0,  17] PS: [ 0,  0] PE: [ 0, 17]     shell_cmd: shell_cmd
B: [  0,   5] PS: [ 0,  0] PE: [ 0,  5]       modifier: quiet `quiet`
B: [  6,   7] PS: [ 0,  6] PE: [ 0,  7]       $ `$`
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]       command: expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]         delegate: ternary_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]           delegate: or_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]             delegate: and_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]               delegate: compare_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]                 delegate: add_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]                   delegate: mult_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]                     delegate: unary_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]                       delegate: fallback_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]                         delegate: indexed_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]                           root: primary_expr
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]                             literal
B: [  7,  17] PS: [ 0,  7] PE: [ 0, 17]                               string
B: [  7,   8] PS: [ 0,  7] PE: [ 0,  8]                                 start: string_start ```
B: [  8,  16] PS: [ 0,  8] PE: [ 0, 16]                                 contents: string_contents
B: [  8,  16] PS: [ 0,  8] PE: [ 0, 16]                                   content: string_content `make all`
B: [ 16,  17] PS: [ 0, 16] PE: [ 0, 17]                                 end: string_end ```
B: [ 18,  42] PS: [ 1,  0] PE: [ 1, 24]   shell_stmt
B: [ 18,  22] PS: [ 1,  0] PE: [ 1,  4]     left: var_path
B: [ 18,  22] PS: [ 1,  0] PE: [ 1,  4]       root: identifier `code`
B: [ 23,  24] PS: [ 1,  5] PE: [ 1,  6]     = `=`
B: [ 25,  42] PS: [ 1,  7] PE: [ 1, 24]     shell_cmd: shell_cmd
B: [ 25,  30] PS: [ 1,  7] PE: [ 1, 12]       modifier: quiet `quiet`
B: [ 31,  32] PS: [ 1, 13] PE: [ 1, 14]       $ `$`
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]       command: expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]         delegate: ternary_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]           delegate: or_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]             delegate: and_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]               delegate: compare_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]                 delegate: add_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]                   delegate: mult_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]                     delegate: unary_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]                       delegate: fallback_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]                         delegate: indexed_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]                           root: primary_expr
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]                             literal
B: [ 32,  42] PS: [ 1, 14] PE: [ 1, 24]                               string
B: [ 32,  33] PS: [ 1, 14] PE: [ 1, 15]                                 start: string_start ```
B: [ 33,  41] PS: [ 1, 15] PE: [ 1, 23]                                 contents: string_contents
B: [ 33,  41] PS: [ 1, 15] PE: [ 1, 23]                                   content: string_content `make all`
B: [ 41,  42] PS: [ 1, 23] PE: [ 1, 24]                                 end: string_end ```
B: [ 43,  75] PS: [ 2,  0] PE: [ 2, 32]   shell_stmt
B: [ 43,  47] PS: [ 2,  0] PE: [ 2,  4]     lefts: var_path
B: [ 43,  47] PS: [ 2,  0] PE: [ 2,  4]       root: identifier `code`
B: [ 47,  48] PS: [ 2,  4] PE: [ 2,  5]     , `,`
B: [ 49,  55] PS: [ 2,  6] PE: [ 2, 12]     lefts: var_path
B: [ 49,  55] PS: [ 2,  6] PE: [ 2, 12]       root: identifier `stdout`
B: [ 56,  57] PS: [ 2, 13] PE: [ 2, 14]     = `=`
B: [ 58,  75] PS: [ 2, 15] PE: [ 2, 32]     shell_cmd: shell_cmd
B: [ 58,  63] PS: [ 2, 15] PE: [ 2, 20]       modifier: quiet `quiet`
B: [ 64,  65] PS: [ 2, 21] PE: [ 2, 22]       $ `$`
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]       command: expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]         delegate: ternary_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]           delegate: or_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]             delegate: and_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]               delegate: compare_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]                 delegate: add_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]                   delegate: mult_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]                     delegate: unary_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]                       delegate: fallback_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]                         delegate: indexed_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]                           root: primary_expr
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]                             literal
B: [ 65,  75] PS: [ 2, 22] PE: [ 2, 32]                               string
B: [ 65,  66] PS: [ 2, 22] PE: [ 2, 23]                                 start: string_start ```
B: [ 66,  74] PS: [ 2, 23] PE: [ 2, 31]                                 contents: string_contents
B: [ 66,  74] PS: [ 2, 23] PE: [ 2, 31]                                   content: string_content `make all`
B: [ 74,  75] PS: [ 2, 31] PE: [ 2, 32]                                 end: string_end ```
B: [ 77, 102] PS: [ 4,  0] PE: [ 4, 25]   shell_stmt
B: [ 77, 102] PS: [ 4,  0] PE: [ 4, 25]     shell_cmd: shell_cmd
B: [ 77,  82] PS: [ 4,  0] PE: [ 4,  5]       modifier: quiet `quiet`
B: [ 83,  90] PS: [ 4,  6] PE: [ 4, 13]       modifier: confirm `confirm`
B: [ 91,  92] PS: [ 4, 14] PE: [ 4, 15]       $ `$`
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]       command: expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]         delegate: ternary_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]           delegate: or_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]             delegate: and_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]               delegate: compare_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]                 delegate: add_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]                   delegate: mult_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]                     delegate: unary_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]                       delegate: fallback_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]                         delegate: indexed_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]                           root: primary_expr
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]                             literal
B: [ 92, 102] PS: [ 4, 15] PE: [ 4, 25]                               string
B: [ 92,  93] PS: [ 4, 15] PE: [ 4, 16]                                 start: string_start ```
B: [ 93, 101] PS: [ 4, 16] PE: [ 4, 24]                                 contents: string_contents
B: [ 93, 101] PS: [ 4, 16] PE: [ 4, 24]                                   content: string_content `make all`
B: [101, 102] PS: [ 4, 24] PE: [ 4, 25]                                 end: string_end ```
B: [103, 135] PS: [ 5,  0] PE: [ 5, 32]   shell_stmt
B: [103, 107] PS: [ 5,  0] PE: [ 5,  4]     left: var_path
B: [103, 107] PS: [ 5,  0] PE: [ 5,  4]       root: identifier `code`
B: [108, 109] PS: [ 5,  5] PE: [ 5,  6]     = `=`
B: [110, 135] PS: [ 5,  7] PE: [ 5, 32]     shell_cmd: shell_cmd
B: [110, 115] PS: [ 5,  7] PE: [ 5, 12]       modifier: quiet `quiet`
B: [116, 123] PS: [ 5, 13] PE: [ 5, 20]       modifier: confirm `confirm`
B: [124, 125] PS: [ 5, 21] PE: [ 5, 22]       $ `$`
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]       command: expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]         delegate: ternary_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]           delegate: or_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]             delegate: and_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]               delegate: compare_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]                 delegate: add_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]                   delegate: mult_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]                     delegate: unary_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]                       delegate: fallback_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]                         delegate: indexed_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]                           root: primary_expr
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]                             literal
B: [125, 135] PS: [ 5, 22] PE: [ 5, 32]                               string
B: [125, 126] PS: [ 5, 22] PE: [ 5, 23]                                 start: string_start ```
B: [126, 134] PS: [ 5, 23] PE: [ 5, 31]                                 contents: string_contents
B: [126, 134] PS: [ 5, 23] PE: [ 5, 31]                                   content: string_content `make all`
B: [134, 135] PS: [ 5, 31] PE: [ 5, 32]                                 end: string_end ```
B: [136, 176] PS: [ 6,  0] PE: [ 6, 40]   shell_stmt
B: [136, 140] PS: [ 6,  0] PE: [ 6,  4]     lefts: var_path
B: [136, 140] PS: [ 6,  0] PE: [ 6,  4]       root: identifier `code`
B: [140, 141] PS: [ 6,  4] PE: [ 6,  5]     , `,`
B: [142, 148] PS: [ 6,  6] PE: [ 6, 12]     lefts: var_path
B: [142, 148] PS: [ 6,  6] PE: [ 6, 12]       root: identifier `stdout`
B: [149, 150] PS: [ 6, 13] PE: [ 6, 14]     = `=`
B: [151, 176] PS: [ 6, 15] PE: [ 6, 40]     shell_cmd: shell_cmd
B: [151, 156] PS: [ 6, 15] PE: [ 6, 20]       modifier: quiet `quiet`
B: [157, 164] PS: [ 6, 21] PE: [ 6, 28]       modifier: confirm `confirm`
B: [165, 166] PS: [ 6, 29] PE: [ 6, 30]       $ `$`
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]       command: expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]         delegate: ternary_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]           delegate: or_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]             delegate: and_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]               delegate: compare_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]                 delegate: add_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]                   delegate: mult_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]                     delegate: unary_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]                       delegate: fallback_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]                         delegate: indexed_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]                           root: primary_expr
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]                             literal
B: [166, 176] PS: [ 6, 30] PE: [ 6, 40]                               string
B: [166, 167] PS: [ 6, 30] PE: [ 6, 31]                                 start: string_start ```
B: [167, 175] PS: [ 6, 31] PE: [ 6, 39]                                 contents: string_contents
B: [167, 175] PS: [ 6, 31] PE: [ 6, 39]                                   content: string_content `make all`
B: [175, 176] PS: [ 6, 39] PE: [ 6, 40]                                 end: string_end ```
B: [178, 211] PS: [ 8,  0] PE: [ 9,  8]   shell_stmt
B: [178, 195] PS: [ 8,  0] PE: [ 8, 17]     shell_cmd: shell_cmd
B: [178, 183] PS: [ 8,  0] PE: [ 8,  5]       modifier: quiet `quiet`
B: [184, 185] PS: [ 8,  6] PE: [ 8,  7]       $ `$`
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]       command: expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]         delegate: ternary_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]           delegate: or_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]             delegate: and_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]               delegate: compare_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]                 delegate: add_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]                   delegate: mult_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]                     delegate: unary_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]                       delegate: fallback_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]                         delegate: indexed_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]                           root: primary_expr
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]                             literal
B: [185, 195] PS: [ 8,  7] PE: [ 8, 17]                               string
B: [185, 186] PS: [ 8,  7] PE: [ 8,  8]                                 start: string_start ```
B: [186, 194] PS: [ 8,  8] PE: [ 8, 16]                                 contents: string_contents
B: [186, 194] PS: [ 8,  8] PE: [ 8, 16]                                   content: string_content `make all`
B: [194, 195] PS: [ 8, 16] PE: [ 8, 17]                                 end: string_end ```
B: [196, 211] PS: [ 8, 18] PE: [ 9,  8]     catch_block
B: [196, 201] PS: [ 8, 18] PE: [ 8, 23]       catch `catch`
B: [201, 202] PS: [ 8, 23] PE: [ 8, 24]       : `:`
B: [207, 211] PS: [ 9,  4] PE: [ 9,  8]       stmt: pass_stmt `pass`
