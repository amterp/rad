=====
Var path map str
=====
a["aaa"]
a["aaa"]["bbb"]
=====
B: [ 0, 25] PS: [0,  0] PE: [2,  0] source_file
B: [ 0,  8] PS: [0,  0] PE: [0,  8]   expr
B: [ 0,  8] PS: [0,  0] PE: [0,  8]     ternary_expr
B: [ 0,  8] PS: [0,  0] PE: [0,  8]       delegate: or_expr
B: [ 0,  8] PS: [0,  0] PE: [0,  8]         delegate: and_expr
B: [ 0,  8] PS: [0,  0] PE: [0,  8]           delegate: compare_expr
B: [ 0,  8] PS: [0,  0] PE: [0,  8]             delegate: add_expr
B: [ 0,  8] PS: [0,  0] PE: [0,  8]               delegate: mult_expr
B: [ 0,  8] PS: [0,  0] PE: [0,  8]                 delegate: unary_expr
B: [ 0,  8] PS: [0,  0] PE: [0,  8]                   delegate: var_path
B: [ 0,  1] PS: [0,  0] PE: [0,  1]                     root: identifier `a`
B: [ 1,  2] PS: [0,  1] PE: [0,  2]                     [ `[`
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                     indexing: expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                       ternary_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                         delegate: or_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                           delegate: and_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                             delegate: compare_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                               delegate: add_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                                 delegate: mult_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                                   delegate: unary_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                                     delegate: indexed_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                                       root: primary_expr
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                                         literal
B: [ 2,  7] PS: [0,  2] PE: [0,  7]                                           string
B: [ 2,  3] PS: [0,  2] PE: [0,  3]                                             start: string_start `"`
B: [ 3,  6] PS: [0,  3] PE: [0,  6]                                             contents: string_contents
B: [ 3,  6] PS: [0,  3] PE: [0,  6]                                               content: string_content `aaa`
B: [ 6,  7] PS: [0,  6] PE: [0,  7]                                             end: string_end `"`
B: [ 7,  8] PS: [0,  7] PE: [0,  8]                     ] `]`
B: [ 9, 24] PS: [1,  0] PE: [1, 15]   expr
B: [ 9, 24] PS: [1,  0] PE: [1, 15]     ternary_expr
B: [ 9, 24] PS: [1,  0] PE: [1, 15]       delegate: or_expr
B: [ 9, 24] PS: [1,  0] PE: [1, 15]         delegate: and_expr
B: [ 9, 24] PS: [1,  0] PE: [1, 15]           delegate: compare_expr
B: [ 9, 24] PS: [1,  0] PE: [1, 15]             delegate: add_expr
B: [ 9, 24] PS: [1,  0] PE: [1, 15]               delegate: mult_expr
B: [ 9, 24] PS: [1,  0] PE: [1, 15]                 delegate: unary_expr
B: [ 9, 24] PS: [1,  0] PE: [1, 15]                   delegate: var_path
B: [ 9, 10] PS: [1,  0] PE: [1,  1]                     root: identifier `a`
B: [10, 11] PS: [1,  1] PE: [1,  2]                     [ `[`
B: [11, 16] PS: [1,  2] PE: [1,  7]                     indexing: expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                       ternary_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                         delegate: or_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                           delegate: and_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                             delegate: compare_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                               delegate: add_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                                 delegate: mult_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                                   delegate: unary_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                                     delegate: indexed_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                                       root: primary_expr
B: [11, 16] PS: [1,  2] PE: [1,  7]                                         literal
B: [11, 16] PS: [1,  2] PE: [1,  7]                                           string
B: [11, 12] PS: [1,  2] PE: [1,  3]                                             start: string_start `"`
B: [12, 15] PS: [1,  3] PE: [1,  6]                                             contents: string_contents
B: [12, 15] PS: [1,  3] PE: [1,  6]                                               content: string_content `aaa`
B: [15, 16] PS: [1,  6] PE: [1,  7]                                             end: string_end `"`
B: [16, 17] PS: [1,  7] PE: [1,  8]                     ] `]`
B: [17, 18] PS: [1,  8] PE: [1,  9]                     [ `[`
B: [18, 23] PS: [1,  9] PE: [1, 14]                     indexing: expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                       ternary_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                         delegate: or_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                           delegate: and_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                             delegate: compare_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                               delegate: add_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                                 delegate: mult_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                                   delegate: unary_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                                     delegate: indexed_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                                       root: primary_expr
B: [18, 23] PS: [1,  9] PE: [1, 14]                                         literal
B: [18, 23] PS: [1,  9] PE: [1, 14]                                           string
B: [18, 19] PS: [1,  9] PE: [1, 10]                                             start: string_start `"`
B: [19, 22] PS: [1, 10] PE: [1, 13]                                             contents: string_contents
B: [19, 22] PS: [1, 10] PE: [1, 13]                                               content: string_content `bbb`
B: [22, 23] PS: [1, 13] PE: [1, 14]                                             end: string_end `"`
B: [23, 24] PS: [1, 14] PE: [1, 15]                     ] `]`
