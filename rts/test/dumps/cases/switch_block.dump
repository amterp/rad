=====
Switch block
=====
switch num:
    case 1, 2:
        print(10, 20)
    case 3:
        print(30, 40)
    default:
        print(0)
=====
B: [  0, 113] PS: [0,  0] PE: [7,  0] source_file
B: [  0, 112] PS: [0,  0] PE: [6, 16]   switch_stmt
B: [  0,   6] PS: [0,  0] PE: [0,  6]     switch `switch`
B: [  7,  10] PS: [0,  7] PE: [0, 10]     discriminant: expr
B: [  7,  10] PS: [0,  7] PE: [0, 10]       delegate: ternary_expr
B: [  7,  10] PS: [0,  7] PE: [0, 10]         delegate: or_expr
B: [  7,  10] PS: [0,  7] PE: [0, 10]           delegate: and_expr
B: [  7,  10] PS: [0,  7] PE: [0, 10]             delegate: compare_expr
B: [  7,  10] PS: [0,  7] PE: [0, 10]               delegate: add_expr
B: [  7,  10] PS: [0,  7] PE: [0, 10]                 delegate: mult_expr
B: [  7,  10] PS: [0,  7] PE: [0, 10]                   delegate: unary_expr
B: [  7,  10] PS: [0,  7] PE: [0, 10]                     delegate: var_path
B: [  7,  10] PS: [0,  7] PE: [0, 10]                       root: identifier `num`
B: [ 10,  11] PS: [0, 10] PE: [0, 11]     : `:`
B: [ 16,  48] PS: [1,  4] PE: [2, 21]     case: switch_case
B: [ 16,  20] PS: [1,  4] PE: [1,  8]       case `case`
B: [ 21,  22] PS: [1,  9] PE: [1, 10]       case_key: expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]         delegate: ternary_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]           delegate: or_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]             delegate: and_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]               delegate: compare_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]                 delegate: add_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]                   delegate: mult_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]                     delegate: unary_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]                       delegate: indexed_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]                         root: primary_expr
B: [ 21,  22] PS: [1,  9] PE: [1, 10]                           literal
B: [ 21,  22] PS: [1,  9] PE: [1, 10]                             int `1`
B: [ 22,  23] PS: [1, 10] PE: [1, 11]       , `,`
B: [ 24,  25] PS: [1, 12] PE: [1, 13]       case_key: expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]         delegate: ternary_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]           delegate: or_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]             delegate: and_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]               delegate: compare_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]                 delegate: add_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]                   delegate: mult_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]                     delegate: unary_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]                       delegate: indexed_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]                         root: primary_expr
B: [ 24,  25] PS: [1, 12] PE: [1, 13]                           literal
B: [ 24,  25] PS: [1, 12] PE: [1, 13]                             int `2`
B: [ 25,  48] PS: [1, 13] PE: [2, 21]       alt: switch_case_block
B: [ 25,  26] PS: [1, 13] PE: [1, 14]         : `:`
B: [ 35,  48] PS: [2,  8] PE: [2, 21]         stmt: expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]           delegate: ternary_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]             delegate: or_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]               delegate: and_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]                 delegate: compare_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]                   delegate: add_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]                     delegate: mult_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]                       delegate: unary_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]                         delegate: indexed_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]                           root: primary_expr
B: [ 35,  48] PS: [2,  8] PE: [2, 21]                             call
B: [ 35,  40] PS: [2,  8] PE: [2, 13]                               func: identifier `print`
B: [ 40,  41] PS: [2, 13] PE: [2, 14]                               ( `(`
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                               arg: expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                 delegate: ternary_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                   delegate: or_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                     delegate: and_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                       delegate: compare_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                         delegate: add_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                           delegate: mult_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                             delegate: unary_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                               delegate: indexed_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                                 root: primary_expr
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                                   literal
B: [ 41,  43] PS: [2, 14] PE: [2, 16]                                                     int `10`
B: [ 43,  44] PS: [2, 16] PE: [2, 17]                               , `,`
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                               arg: expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                 delegate: ternary_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                   delegate: or_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                     delegate: and_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                       delegate: compare_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                         delegate: add_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                           delegate: mult_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                             delegate: unary_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                               delegate: indexed_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                                 root: primary_expr
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                                   literal
B: [ 45,  47] PS: [2, 18] PE: [2, 20]                                                     int `20`
B: [ 47,  48] PS: [2, 20] PE: [2, 21]                               ) `)`
B: [ 53,  82] PS: [3,  4] PE: [4, 21]     case: switch_case
B: [ 53,  57] PS: [3,  4] PE: [3,  8]       case `case`
B: [ 58,  59] PS: [3,  9] PE: [3, 10]       case_key: expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]         delegate: ternary_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]           delegate: or_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]             delegate: and_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]               delegate: compare_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]                 delegate: add_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]                   delegate: mult_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]                     delegate: unary_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]                       delegate: indexed_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]                         root: primary_expr
B: [ 58,  59] PS: [3,  9] PE: [3, 10]                           literal
B: [ 58,  59] PS: [3,  9] PE: [3, 10]                             int `3`
B: [ 59,  82] PS: [3, 10] PE: [4, 21]       alt: switch_case_block
B: [ 59,  60] PS: [3, 10] PE: [3, 11]         : `:`
B: [ 69,  82] PS: [4,  8] PE: [4, 21]         stmt: expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]           delegate: ternary_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]             delegate: or_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]               delegate: and_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]                 delegate: compare_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]                   delegate: add_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]                     delegate: mult_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]                       delegate: unary_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]                         delegate: indexed_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]                           root: primary_expr
B: [ 69,  82] PS: [4,  8] PE: [4, 21]                             call
B: [ 69,  74] PS: [4,  8] PE: [4, 13]                               func: identifier `print`
B: [ 74,  75] PS: [4, 13] PE: [4, 14]                               ( `(`
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                               arg: expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                 delegate: ternary_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                   delegate: or_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                     delegate: and_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                       delegate: compare_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                         delegate: add_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                           delegate: mult_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                             delegate: unary_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                               delegate: indexed_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                                 root: primary_expr
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                                   literal
B: [ 75,  77] PS: [4, 14] PE: [4, 16]                                                     int `30`
B: [ 77,  78] PS: [4, 16] PE: [4, 17]                               , `,`
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                               arg: expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                 delegate: ternary_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                   delegate: or_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                     delegate: and_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                       delegate: compare_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                         delegate: add_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                           delegate: mult_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                             delegate: unary_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                               delegate: indexed_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                                 root: primary_expr
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                                   literal
B: [ 79,  81] PS: [4, 18] PE: [4, 20]                                                     int `40`
B: [ 81,  82] PS: [4, 20] PE: [4, 21]                               ) `)`
B: [ 87, 112] PS: [5,  4] PE: [6, 16]     default: switch_default
B: [ 87,  94] PS: [5,  4] PE: [5, 11]       default `default`
B: [ 94, 112] PS: [5, 11] PE: [6, 16]       alt: switch_case_block
B: [ 94,  95] PS: [5, 11] PE: [5, 12]         : `:`
B: [104, 112] PS: [6,  8] PE: [6, 16]         stmt: expr
B: [104, 112] PS: [6,  8] PE: [6, 16]           delegate: ternary_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]             delegate: or_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]               delegate: and_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]                 delegate: compare_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]                   delegate: add_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]                     delegate: mult_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]                       delegate: unary_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]                         delegate: indexed_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]                           root: primary_expr
B: [104, 112] PS: [6,  8] PE: [6, 16]                             call
B: [104, 109] PS: [6,  8] PE: [6, 13]                               func: identifier `print`
B: [109, 110] PS: [6, 13] PE: [6, 14]                               ( `(`
B: [110, 111] PS: [6, 14] PE: [6, 15]                               arg: expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                 delegate: ternary_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                   delegate: or_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                     delegate: and_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                       delegate: compare_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                         delegate: add_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                           delegate: mult_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                             delegate: unary_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                               delegate: indexed_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                                 root: primary_expr
B: [110, 111] PS: [6, 14] PE: [6, 15]                                                   literal
B: [110, 111] PS: [6, 14] PE: [6, 15]                                                     int `0`
B: [111, 112] PS: [6, 15] PE: [6, 16]                               ) `)`
