=====
Shell
=====
unsafe confirm quiet $`ls 1`
quiet confirm unsafe $`ls 2`

quiet $!`ls 3`

quiet confirm $`ls 4`
fail:
    a = 1
=====
B: [  0, 113] PS: [0,  0], PE: [8,  0] source_file
B: [  0,  28] PS: [0,  0], PE: [0, 28]   shell_stmt
B: [  0,  28] PS: [0,  0], PE: [0, 28]     shell_cmd: unsafe_shell_cmd
B: [  0,   6] PS: [0,  0], PE: [0,  6]       unsafe_mod: unsafe `unsafe`
B: [  7,  14] PS: [0,  7], PE: [0, 14]       confirm_mod: confirm `confirm`
B: [ 15,  20] PS: [0, 15], PE: [0, 20]       quiet_mod: quiet `quiet`
B: [ 21,  22] PS: [0, 21], PE: [0, 22]       $ `$`
B: [ 22,  28] PS: [0, 22], PE: [0, 28]       command: expr
B: [ 22,  28] PS: [0, 22], PE: [0, 28]         primary_expr
B: [ 22,  28] PS: [0, 22], PE: [0, 28]           literal
B: [ 22,  28] PS: [0, 22], PE: [0, 28]             string
B: [ 22,  23] PS: [0, 22], PE: [0, 23]               start: string_start ```
B: [ 23,  27] PS: [0, 23], PE: [0, 27]               contents: string_contents
B: [ 23,  27] PS: [0, 23], PE: [0, 27]                 content: string_content `ls 1`
B: [ 27,  28] PS: [0, 27], PE: [0, 28]               end: string_end ```
B: [ 29,  57] PS: [1,  0], PE: [1, 28]   shell_stmt
B: [ 29,  57] PS: [1,  0], PE: [1, 28]     shell_cmd: unsafe_shell_cmd
B: [ 29,  34] PS: [1,  0], PE: [1,  5]       quiet_mod: quiet `quiet`
B: [ 35,  42] PS: [1,  6], PE: [1, 13]       confirm_mod: confirm `confirm`
B: [ 43,  49] PS: [1, 14], PE: [1, 20]       unsafe_mod: unsafe `unsafe`
B: [ 50,  51] PS: [1, 21], PE: [1, 22]       $ `$`
B: [ 51,  57] PS: [1, 22], PE: [1, 28]       command: expr
B: [ 51,  57] PS: [1, 22], PE: [1, 28]         primary_expr
B: [ 51,  57] PS: [1, 22], PE: [1, 28]           literal
B: [ 51,  57] PS: [1, 22], PE: [1, 28]             string
B: [ 51,  52] PS: [1, 22], PE: [1, 23]               start: string_start ```
B: [ 52,  56] PS: [1, 23], PE: [1, 27]               contents: string_contents
B: [ 52,  56] PS: [1, 23], PE: [1, 27]                 content: string_content `ls 2`
B: [ 56,  57] PS: [1, 27], PE: [1, 28]               end: string_end ```
B: [ 59,  73] PS: [3,  0], PE: [3, 14]   shell_stmt
B: [ 59,  73] PS: [3,  0], PE: [3, 14]     shell_cmd: critical_shell_cmd
B: [ 59,  64] PS: [3,  0], PE: [3,  5]       quiet_mod: quiet `quiet`
B: [ 65,  67] PS: [3,  6], PE: [3,  8]       $! `$!`
B: [ 67,  73] PS: [3,  8], PE: [3, 14]       command: expr
B: [ 67,  73] PS: [3,  8], PE: [3, 14]         primary_expr
B: [ 67,  73] PS: [3,  8], PE: [3, 14]           literal
B: [ 67,  73] PS: [3,  8], PE: [3, 14]             string
B: [ 67,  68] PS: [3,  8], PE: [3,  9]               start: string_start ```
B: [ 68,  72] PS: [3,  9], PE: [3, 13]               contents: string_contents
B: [ 68,  72] PS: [3,  9], PE: [3, 13]                 content: string_content `ls 3`
B: [ 72,  73] PS: [3, 13], PE: [3, 14]               end: string_end ```
B: [ 75, 112] PS: [5,  0], PE: [7,  9]   shell_stmt
B: [ 75, 112] PS: [5,  0], PE: [7,  9]     shell_cmd: checked_shell_cmd
B: [ 75,  80] PS: [5,  0], PE: [5,  5]       quiet_mod: quiet `quiet`
B: [ 81,  88] PS: [5,  6], PE: [5, 13]       confirm_mod: confirm `confirm`
B: [ 89,  90] PS: [5, 14], PE: [5, 15]       $ `$`
B: [ 90,  96] PS: [5, 15], PE: [5, 21]       command: expr
B: [ 90,  96] PS: [5, 15], PE: [5, 21]         primary_expr
B: [ 90,  96] PS: [5, 15], PE: [5, 21]           literal
B: [ 90,  96] PS: [5, 15], PE: [5, 21]             string
B: [ 90,  91] PS: [5, 15], PE: [5, 16]               start: string_start ```
B: [ 91,  95] PS: [5, 16], PE: [5, 20]               contents: string_contents
B: [ 91,  95] PS: [5, 16], PE: [5, 20]                 content: string_content `ls 4`
B: [ 95,  96] PS: [5, 20], PE: [5, 21]               end: string_end ```
B: [ 97, 101] PS: [6,  0], PE: [6,  4]       response: fail `fail`
B: [101, 102] PS: [6,  4], PE: [6,  5]       : `:`
B: [107, 112] PS: [7,  4], PE: [7,  9]       stmt: assign
B: [107, 108] PS: [7,  4], PE: [7,  5]         left: var_path
B: [107, 108] PS: [7,  4], PE: [7,  5]           root: identifier `a`
B: [109, 110] PS: [7,  6], PE: [7,  7]         = `=`
B: [111, 112] PS: [7,  8], PE: [7,  9]         right: expr
B: [111, 112] PS: [7,  8], PE: [7,  9]           primary_expr
B: [111, 112] PS: [7,  8], PE: [7,  9]             literal
B: [111, 112] PS: [7,  8], PE: [7,  9]               int `1`
