=====
Misc exprs
=====
width[i] or height[i]
width[0] or height[i]
width.s or height[i]
=====
B: [ 0, 65] PS: [0,  0], PE: [3,  0] source_file
B: [ 0, 21] PS: [0,  0], PE: [0, 21]   expr
B: [ 0, 21] PS: [0,  0], PE: [0, 21]     base: bool_op
B: [ 0,  8] PS: [0,  0], PE: [0,  8]       left: expr
B: [ 0,  8] PS: [0,  0], PE: [0,  8]         base: var_path
B: [ 0,  5] PS: [0,  0], PE: [0,  5]           root: identifier `width`
B: [ 5,  6] PS: [0,  5], PE: [0,  6]           [ `[`
B: [ 6,  7] PS: [0,  6], PE: [0,  7]           indexing: expr
B: [ 6,  7] PS: [0,  6], PE: [0,  7]             base: var_path
B: [ 6,  7] PS: [0,  6], PE: [0,  7]               root: identifier `i`
B: [ 7,  8] PS: [0,  7], PE: [0,  8]           ] `]`
B: [ 9, 11] PS: [0,  9], PE: [0, 11]       op: or `or`
B: [12, 21] PS: [0, 12], PE: [0, 21]       right: expr
B: [12, 21] PS: [0, 12], PE: [0, 21]         base: var_path
B: [12, 18] PS: [0, 12], PE: [0, 18]           root: identifier `height`
B: [18, 19] PS: [0, 18], PE: [0, 19]           [ `[`
B: [19, 20] PS: [0, 19], PE: [0, 20]           indexing: expr
B: [19, 20] PS: [0, 19], PE: [0, 20]             base: var_path
B: [19, 20] PS: [0, 19], PE: [0, 20]               root: identifier `i`
B: [20, 21] PS: [0, 20], PE: [0, 21]           ] `]`
B: [22, 43] PS: [1,  0], PE: [1, 21]   expr
B: [22, 43] PS: [1,  0], PE: [1, 21]     base: bool_op
B: [22, 30] PS: [1,  0], PE: [1,  8]       left: expr
B: [22, 30] PS: [1,  0], PE: [1,  8]         base: var_path
B: [22, 27] PS: [1,  0], PE: [1,  5]           root: identifier `width`
B: [27, 28] PS: [1,  5], PE: [1,  6]           [ `[`
B: [28, 29] PS: [1,  6], PE: [1,  7]           indexing: expr
B: [28, 29] PS: [1,  6], PE: [1,  7]             base: primary_expr
B: [28, 29] PS: [1,  6], PE: [1,  7]               literal
B: [28, 29] PS: [1,  6], PE: [1,  7]                 int `0`
B: [29, 30] PS: [1,  7], PE: [1,  8]           ] `]`
B: [31, 33] PS: [1,  9], PE: [1, 11]       op: or `or`
B: [34, 43] PS: [1, 12], PE: [1, 21]       right: expr
B: [34, 43] PS: [1, 12], PE: [1, 21]         base: var_path
B: [34, 40] PS: [1, 12], PE: [1, 18]           root: identifier `height`
B: [40, 41] PS: [1, 18], PE: [1, 19]           [ `[`
B: [41, 42] PS: [1, 19], PE: [1, 20]           indexing: expr
B: [41, 42] PS: [1, 19], PE: [1, 20]             base: var_path
B: [41, 42] PS: [1, 19], PE: [1, 20]               root: identifier `i`
B: [42, 43] PS: [1, 20], PE: [1, 21]           ] `]`
B: [44, 64] PS: [2,  0], PE: [2, 20]   expr
B: [44, 64] PS: [2,  0], PE: [2, 20]     base: bool_op
B: [44, 51] PS: [2,  0], PE: [2,  7]       left: expr
B: [44, 51] PS: [2,  0], PE: [2,  7]         base: var_path
B: [44, 49] PS: [2,  0], PE: [2,  5]           root: identifier `width`
B: [49, 50] PS: [2,  5], PE: [2,  6]           . `.`
B: [50, 51] PS: [2,  6], PE: [2,  7]           indexing: identifier `s`
B: [52, 54] PS: [2,  8], PE: [2, 10]       op: or `or`
B: [55, 64] PS: [2, 11], PE: [2, 20]       right: expr
B: [55, 64] PS: [2, 11], PE: [2, 20]         base: var_path
B: [55, 61] PS: [2, 11], PE: [2, 17]           root: identifier `height`
B: [61, 62] PS: [2, 17], PE: [2, 18]           [ `[`
B: [62, 63] PS: [2, 18], PE: [2, 19]           indexing: expr
B: [62, 63] PS: [2, 18], PE: [2, 19]             base: var_path
B: [62, 63] PS: [2, 18], PE: [2, 19]               root: identifier `i`
B: [63, 64] PS: [2, 19], PE: [2, 20]           ] `]`
