=====
Metadata header
=====
---
This is a file header.
---
// This is a comment
script_id = "abracadabra"
// Another comment
another = 1 // inline comment
another2 = true
another3 = 3.14
---
a = fn() 2
=====
B: [  0, 174] PS: [ 0,  0] PE: [11,  0] source_file
B: [  0, 163] PS: [ 0,  0] PE: [10,  0]   file_header
B: [  0,   3] PS: [ 0,  0] PE: [ 0,  3]     --- `---`
B: [  4,  27] PS: [ 1,  0] PE: [ 2,  0]     contents: file_header_contents `This is a file header.\n`
B: [ 27,  30] PS: [ 2,  0] PE: [ 2,  3]     --- `---`
B: [ 31,  51] PS: [ 3,  0] PE: [ 3, 20]     comment `// This is a comment`
B: [ 52,  78] PS: [ 4,  0] PE: [ 5,  0]     metadata_entry: file_header_metadata_entry
B: [ 52,  61] PS: [ 4,  0] PE: [ 4,  9]       key: identifier `script_id`
B: [ 62,  63] PS: [ 4, 10] PE: [ 4, 11]       = `=`
B: [ 64,  77] PS: [ 4, 12] PE: [ 4, 25]       value: string
B: [ 64,  65] PS: [ 4, 12] PE: [ 4, 13]         start: string_start `"`
B: [ 65,  76] PS: [ 4, 13] PE: [ 4, 24]         contents: string_contents
B: [ 65,  76] PS: [ 4, 13] PE: [ 4, 24]           content: string_content `abracadabra`
B: [ 76,  77] PS: [ 4, 24] PE: [ 4, 25]         end: string_end `"`
B: [ 78,  96] PS: [ 5,  0] PE: [ 5, 18]     comment `// Another comment`
B: [ 97, 127] PS: [ 6,  0] PE: [ 7,  0]     metadata_entry: file_header_metadata_entry
B: [ 97, 104] PS: [ 6,  0] PE: [ 6,  7]       key: identifier `another`
B: [105, 106] PS: [ 6,  8] PE: [ 6,  9]       = `=`
B: [107, 108] PS: [ 6, 10] PE: [ 6, 11]       value: int `1`
B: [109, 126] PS: [ 6, 12] PE: [ 6, 29]       comment `// inline comment`
B: [127, 143] PS: [ 7,  0] PE: [ 8,  0]     metadata_entry: file_header_metadata_entry
B: [127, 135] PS: [ 7,  0] PE: [ 7,  8]       key: identifier `another2`
B: [136, 137] PS: [ 7,  9] PE: [ 7, 10]       = `=`
B: [138, 142] PS: [ 7, 11] PE: [ 7, 15]       value: bool
B: [138, 142] PS: [ 7, 11] PE: [ 7, 15]         true `true`
B: [143, 159] PS: [ 8,  0] PE: [ 9,  0]     metadata_entry: file_header_metadata_entry
B: [143, 151] PS: [ 8,  0] PE: [ 8,  8]       key: identifier `another3`
B: [152, 153] PS: [ 8,  9] PE: [ 8, 10]       = `=`
B: [154, 158] PS: [ 8, 11] PE: [ 8, 15]       value: float `3.14`
B: [159, 162] PS: [ 9,  0] PE: [ 9,  3]     --- `---`
B: [163, 173] PS: [10,  0] PE: [10, 10]   assign
B: [163, 164] PS: [10,  0] PE: [10,  1]     left: var_path
B: [163, 164] PS: [10,  0] PE: [10,  1]       root: identifier `a`
B: [165, 166] PS: [10,  2] PE: [10,  3]     = `=`
B: [167, 173] PS: [10,  4] PE: [10, 10]     right: expr
B: [167, 173] PS: [10,  4] PE: [10, 10]       ternary_expr
B: [167, 173] PS: [10,  4] PE: [10, 10]         delegate: or_expr
B: [167, 173] PS: [10,  4] PE: [10, 10]           delegate: and_expr
B: [167, 173] PS: [10,  4] PE: [10, 10]             delegate: compare_expr
B: [167, 173] PS: [10,  4] PE: [10, 10]               delegate: add_expr
B: [167, 173] PS: [10,  4] PE: [10, 10]                 delegate: mult_expr
B: [167, 173] PS: [10,  4] PE: [10, 10]                   delegate: unary_expr
B: [167, 173] PS: [10,  4] PE: [10, 10]                     delegate: lambda
B: [167, 169] PS: [10,  4] PE: [10,  6]                       keyword: fn `fn`
B: [169, 171] PS: [10,  6] PE: [10,  8]                       () `()`
B: [172, 173] PS: [10,  9] PE: [10, 10]                       expr: expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                         ternary_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                           delegate: or_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                             delegate: and_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                               delegate: compare_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                                 delegate: add_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                                   delegate: mult_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                                     delegate: unary_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                                       delegate: indexed_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                                         root: primary_expr
B: [172, 173] PS: [10,  9] PE: [10, 10]                                           literal
B: [172, 173] PS: [10,  9] PE: [10, 10]                                             int `2`
