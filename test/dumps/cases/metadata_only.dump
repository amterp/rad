=====
Metadata only (not great looking tbh)
=====
---
---
// This is a comment
script_id = "abracadabra"
// Another comment
another = 1 // inline comment
another2 = true
another3 = 3.14
---
a = fn() 2
=====
B: [  0, 151] PS: [ 0,  0] PE: [10,  0] source_file
B: [  0, 140] PS: [ 0,  0] PE: [ 9,  0]   file_header
B: [  0,   3] PS: [ 0,  0] PE: [ 0,  3]     --- `---`
B: [  4,   7] PS: [ 1,  0] PE: [ 1,  3]     --- `---`
B: [  8,  28] PS: [ 2,  0] PE: [ 2, 20]     comment `// This is a comment`
B: [ 29,  55] PS: [ 3,  0] PE: [ 4,  0]     metadata_entry: file_header_metadata_entry
B: [ 29,  38] PS: [ 3,  0] PE: [ 3,  9]       key: identifier `script_id`
B: [ 39,  40] PS: [ 3, 10] PE: [ 3, 11]       = `=`
B: [ 41,  54] PS: [ 3, 12] PE: [ 3, 25]       value: string
B: [ 41,  42] PS: [ 3, 12] PE: [ 3, 13]         start: string_start `"`
B: [ 42,  53] PS: [ 3, 13] PE: [ 3, 24]         contents: string_contents
B: [ 42,  53] PS: [ 3, 13] PE: [ 3, 24]           content: string_content `abracadabra`
B: [ 53,  54] PS: [ 3, 24] PE: [ 3, 25]         end: string_end `"`
B: [ 55,  73] PS: [ 4,  0] PE: [ 4, 18]     comment `// Another comment`
B: [ 74, 104] PS: [ 5,  0] PE: [ 6,  0]     metadata_entry: file_header_metadata_entry
B: [ 74,  81] PS: [ 5,  0] PE: [ 5,  7]       key: identifier `another`
B: [ 82,  83] PS: [ 5,  8] PE: [ 5,  9]       = `=`
B: [ 84,  85] PS: [ 5, 10] PE: [ 5, 11]       value: int `1`
B: [ 86, 103] PS: [ 5, 12] PE: [ 5, 29]       comment `// inline comment`
B: [104, 120] PS: [ 6,  0] PE: [ 7,  0]     metadata_entry: file_header_metadata_entry
B: [104, 112] PS: [ 6,  0] PE: [ 6,  8]       key: identifier `another2`
B: [113, 114] PS: [ 6,  9] PE: [ 6, 10]       = `=`
B: [115, 119] PS: [ 6, 11] PE: [ 6, 15]       value: bool
B: [115, 119] PS: [ 6, 11] PE: [ 6, 15]         true `true`
B: [120, 136] PS: [ 7,  0] PE: [ 8,  0]     metadata_entry: file_header_metadata_entry
B: [120, 128] PS: [ 7,  0] PE: [ 7,  8]       key: identifier `another3`
B: [129, 130] PS: [ 7,  9] PE: [ 7, 10]       = `=`
B: [131, 135] PS: [ 7, 11] PE: [ 7, 15]       value: float `3.14`
B: [136, 139] PS: [ 8,  0] PE: [ 8,  3]     --- `---`
B: [140, 150] PS: [ 9,  0] PE: [ 9, 10]   assign
B: [140, 141] PS: [ 9,  0] PE: [ 9,  1]     left: var_path
B: [140, 141] PS: [ 9,  0] PE: [ 9,  1]       root: identifier `a`
B: [142, 143] PS: [ 9,  2] PE: [ 9,  3]     = `=`
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]     right: expr
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]       ternary_expr
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]         delegate: or_expr
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]           delegate: and_expr
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]             delegate: compare_expr
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]               delegate: add_expr
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]                 delegate: mult_expr
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]                   delegate: unary_expr
B: [144, 150] PS: [ 9,  4] PE: [ 9, 10]                     delegate: lambda
B: [144, 146] PS: [ 9,  4] PE: [ 9,  6]                       keyword: fn `fn`
B: [146, 148] PS: [ 9,  6] PE: [ 9,  8]                       () `()`
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                       expr: expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                         ternary_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                           delegate: or_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                             delegate: and_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                               delegate: compare_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                                 delegate: add_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                                   delegate: mult_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                                     delegate: unary_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                                       delegate: indexed_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                                         root: primary_expr
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                                           literal
B: [149, 150] PS: [ 9,  9] PE: [ 9, 10]                                             int `2`
